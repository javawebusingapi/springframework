<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">	
	
	<!-- 주어진 DataSource를 이용해서 DB와 연동하고, XML파일을 이용해서 SQL문을 생성하고 실행하는 역할 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis/mapper-config.xml"/>
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
	</bean>

	<!-- 자바코드에서 SqlSessionFactoryBean 객체를 쉽게 이용할 수 있도록 제공하는 객체 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- Mybatis에 Dao구현 객체를 생성하기 위한 (@Mapper가 달린) 인터페이스의 위치를 찾을때  사용한다. -->
	<!-- base-package : 지정된 패키지 아래에서 Mapper 인터페이스를 검색(mapper xml과 연동)하고, 구현 객체를 자동으로 생성해서 스프링 관리 빈으로 생성 -->
	<!-- annotaion : @Mapper가 붙어있는 인터페이스만 Mapper로 등록하고, 관리 빈으로 등록  -->
	<mybatis-spring:scan base-package="com.mycompany.springwebapp.dao" annotation="org.apache.ibatis.annotations.Mapper"/>
</beans>
